"""empty message

Revision ID: bb707c3d7c44
Revises: 1028875a6092
Create Date: 2022-09-08 21:18:26.978814

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb707c3d7c44'
down_revision = '1028875a6092'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Barcode_categories',
    sa.Column('b_category_id', sa.Integer(), nullable=False),
    sa.Column('b_category_name', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('b_category_id', name=op.f('pk_Barcode_categories')),
    sa.UniqueConstraint('b_category_name', name=op.f('uq_Barcode_categories_b_category_name'))
    )
    op.create_table('Barcode_companies',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=150), nullable=True),
    sa.PrimaryKeyConstraint('company_id', name=op.f('pk_Barcode_companies')),
    sa.UniqueConstraint('company_name', name=op.f('uq_Barcode_companies_company_name'))
    )
    op.create_table('Ingredient',
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_name', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('ingredient_id', name=op.f('pk_Ingredient')),
    sa.UniqueConstraint('ingredient_name', name=op.f('uq_Ingredient_ingredient_name'))
    )
    op.create_table('Recipes',
    sa.Column('recipe_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('recipe_name', sa.String(length=200), nullable=False),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('recommand', sa.Integer(), nullable=True),
    sa.Column('scrap', sa.Integer(), nullable=True),
    sa.Column('cooking_serving', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('cooking_time', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('recipe_id', name=op.f('pk_Recipes'))
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('gender', sa.String(length=100), nullable=False),
    sa.Column('region', sa.String(length=200), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_User')),
    sa.UniqueConstraint('email', name=op.f('uq_User_email')),
    sa.UniqueConstraint('username', name=op.f('uq_User_username'))
    )
    op.create_table('Barcode',
    sa.Column('barcode_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('barcode', sa.Integer(), nullable=True),
    sa.Column('b_category_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('product', sa.String(length=120), nullable=True),
    sa.Column('shelf_life', sa.String(length=120), nullable=True),
    sa.ForeignKeyConstraint(['b_category_id'], ['Barcode_categories.b_category_id'], name=op.f('fk_Barcode_b_category_id_Barcode_categories')),
    sa.ForeignKeyConstraint(['company_id'], ['Barcode_companies.company_id'], name=op.f('fk_Barcode_company_id_Barcode_companies')),
    sa.ForeignKeyConstraint(['product'], ['Ingredient.ingredient_name'], name=op.f('fk_Barcode_product_Ingredient')),
    sa.PrimaryKeyConstraint('barcode_id', name=op.f('pk_Barcode')),
    sa.UniqueConstraint('barcode', name=op.f('uq_Barcode_barcode'))
    )
    op.create_table('Fridge',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product', sa.String(length=200), nullable=True),
    sa.Column('barcode', sa.Integer(), nullable=True),
    sa.Column('subclass', sa.String(length=150), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('exp_date', sa.Date(), nullable=False),
    sa.Column('adding_date', sa.DateTime(), nullable=True),
    sa.Column('modify_date', sa.DateTime(), nullable=True),
    sa.Column('remain_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product'], ['Ingredient.ingredient_name'], name=op.f('fk_Fridge_product_Ingredient')),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name=op.f('fk_Fridge_user_id_User'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Fridge'))
    )
    op.create_table('Recipe_ingredient',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['Recipes.recipe_id'], name=op.f('fk_Recipe_ingredient_recipe_id_Recipes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Recipe_ingredient'))
    )
    op.create_table('Recipe_situation',
    sa.Column('situation_id', sa.Integer(), nullable=False),
    sa.Column('reciepe_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reciepe_id'], ['Recipes.recipe_id'], name=op.f('fk_Recipe_situation_reciepe_id_Recipes')),
    sa.PrimaryKeyConstraint('situation_id', name=op.f('pk_Recipe_situation'))
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('modify_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name=op.f('fk_question_user_id_User'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_question'))
    )
    op.create_table('answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('modify_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], name=op.f('fk_answer_question_id_question'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name=op.f('fk_answer_user_id_User'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_answer'))
    )
    op.create_table('situation',
    sa.Column('situation_id', sa.Integer(), nullable=False),
    sa.Column('situation_name', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['situation_id'], ['Recipe_situation.situation_id'], name=op.f('fk_situation_situation_id_Recipe_situation')),
    sa.PrimaryKeyConstraint('situation_id', name=op.f('pk_situation'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('situation')
    op.drop_table('answer')
    op.drop_table('question')
    op.drop_table('Recipe_situation')
    op.drop_table('Recipe_ingredient')
    op.drop_table('Fridge')
    op.drop_table('Barcode')
    op.drop_table('User')
    op.drop_table('Recipes')
    op.drop_table('Ingredient')
    op.drop_table('Barcode_companies')
    op.drop_table('Barcode_categories')
    # ### end Alembic commands ###
