"""empty message

Revision ID: 5d4de0310a9d
Revises: b37ee322b675
Create Date: 2022-09-06 01:41:27.518809

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5d4de0310a9d'
down_revision = 'b37ee322b675'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('barcode_categories')
    op.drop_table('barcode_companies')
    op.drop_table('recipe_situation')
    op.drop_table('situation')
    op.drop_table('barcode_ingredient')
    op.drop_table('barcode')
    op.drop_table('recipe_ingredient')
    op.drop_table('recipes')
    op.drop_table('ingredient')
    op.drop_constraint('user_email_key', 'user', type_='unique')
    op.drop_constraint('user_username_key', 'user', type_='unique')
    op.create_unique_constraint(op.f('uq_user_email'), 'user', ['email'])
    op.create_unique_constraint(op.f('uq_user_username'), 'user', ['username'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_user_username'), 'user', type_='unique')
    op.drop_constraint(op.f('uq_user_email'), 'user', type_='unique')
    op.create_unique_constraint('user_username_key', 'user', ['username'])
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.create_table('ingredient',
    sa.Column('ingredient_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ingredient_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True)
    )
    op.create_table('recipes',
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('recipe_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('recipe_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('recommand', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('scrap', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cooking_serving', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cooking_time', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('recipe_ingredient',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ingredient_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('barcode',
    sa.Column('barcode_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('barcode', sa.VARCHAR(length=13), autoincrement=False, nullable=True),
    sa.Column('b_category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('shelf_life', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('expiry_date', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('barcode_ingredient',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('barcode_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ingredient_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('situation',
    sa.Column('situation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('situation_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True)
    )
    op.create_table('recipe_situation',
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('situation_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('barcode_companies',
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('company_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True)
    )
    op.create_table('barcode_categories',
    sa.Column('b_category_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('b_category_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
